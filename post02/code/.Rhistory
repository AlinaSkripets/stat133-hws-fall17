a=2
b=4
c=a+b
a<-1
b,-2
b<-2
c<-3
d < - 4
d<-4
a <- 1
b <- 3
a <- 1
b <- 2
c <- 3
d <- 4
help.search("logarithm")
vec <- c(3, 1, 4)
vec + 1
vec[1] + 1
vec[2] + 1
vec[3] + 1
vec <- c(3, 1, 4)
for (j in 1:3) {
print(vec[j] + 1)
}
vec <- c(1,2,3,4) # Change this value!
for (j in c(1:4)) {
print(vec[j]*3)
}
vec <- c(1,2,3,4)  # Change this value!
vec2 <- rep(0, length(vec))  # "empty" of zeros vector to be filled in the loop
for (i in c(1:4)) {
vec2[i]=vec[i]*3
}
k <- 0
for(k in c(1:100000)){
sum <- sum + (1/2^k)
k <- k+1
}
k <- 0
for(i in c(1:100000)){
sum <- sum + (1/2^k)
k <- k+1
}
for(i in c(1:100000)){
sum <- sum + (1/2^i)
k <- k+1
}
for(i in c(0:100000)){
sum <- sum + (1/2^i)
k <- k+1
}
for(i in c(0:100000)){
sum <- sum + (1/2^i)
}
for(k in c(0:1000000))
{
sum <- sum + (1/2^k)
}
n <- c(0:100000000)
for(k in c(0:n))
{
sum <- sum + (1/2^k)
}
function(x, n) {
for(k in c(0:n)) {
sum <- sum + (1/2^k)
}
}
sumhalf <- function(x, n) {
for(k in c(0:n)) {
sum <- sum + (1/2^k)
}
}
sumhalf <- function(n) {
for(k in c(0:n)) {
sum <- sum + (1/2^k)
}
}
sumhalf(1)
sumhalf <- function(n) {
for(k in c(0:n)) {
m=k
sum <- sum + (1/2^m)
}
}
sumhalf(1)
sumhalf <- function(n) {
k <- 0
for(k in c(0:n)) {
sum <- sum + (1/2^k)
k <- k+1
}
}
sumhalf(1)
sumhalf <- function(n) {
k <- 0
for(k in c(0:n)) {
sum <- sum + (1/2^k)
k <- k+1
}
}
sumhalf(2)
sumhalf <- function(n) {
for(k in 0:n) {
term <- (1/2^k)
print(term)
series[k+1]=term
}
}
sumhalf(2)
for(k in 0:10) {
term <- (1/2^k)
print(term)
series[k+1]=term
}
series <- 0
for(k in 0:10) {
term <- (1/2^k)
print(term)
series[k+1]=term
}
series <- 0
for(k in 0:10) {
term <- (1/2^k)
print(term)
series[k+1]=term
}
sum(series)
series <- 0
for(k in 0:10) {
term <- (1/2^k)
print(term)
series[k+1]=term
}
sum(series)
getwd()
source('stat133/stat133-hws-fall17/hw04/code/functions.R')
test_file('tests.R')
test_file('stat133/stat133-hws-fall17/hw04/code/tests.R')
#Testing
#-----------
# test script
library(testthat)
# source in functions to be tested
source('stat133/stat133-hws-fall17/hw04/code/functions.R')
sink('stat133/stat133-hws-fall17/hw04/output/test-reporter.txt')
test_file('stat133/stat133-hws-fall17/hw04/code/tests.R')
sink()
setwd("/Users/Alina 1/stat133/stat133-hws-fall17/post02/code")
#install.packages("ggmap")
library(ggmap)
library(dplyr)
library(ggplot2)
library(readr)
qmap(location = "Berkeley")
qmap(location = "Berkeley")
#install.packages("ggmap")
library(ggmap)
library(dplyr)
library(ggplot2)
library(readr)
qmap(location = "Berkeley")
qmap(location = "University California Berkeley")
qmap(location = "boston university")
install.packages("ggmap")
install.packages("ggmap")
#install.packages("ggmap")
library(ggmap)
library(dplyr)
library(ggplot2)
library(readr)
qmap(location = "Berkeley")
usa_center = as.numeric(geocode("United States"))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
install.packages("ggmap")
library(ggmap)
install.packages("ggmap")
#install.packages("ggmap")
library(ggmap)
#install.packages("ggmap")
#library(ggmap)
library(dplyr)
library(ggplot2)
library(readr)
qmap(location = "Berkeley")
#install.packages("ggmap")
library(ggmap)
library(dplyr)
library(ggplot2)
library(readr)
qmap(location = "Berkeley")
dat <- read_csv("../data/salaries-by-region.csv", col_types = c(`School Name` = col_character(),
Region = col_character(),
`Starting Median Salary` = col_integer(),
`Mid-Career Median Salary` = col_integer()))
dat <- select(dat, c(1,3))
dat$`Starting Median Salary` = factor(dat$`Starting Median Salary`)
dat$`Starting Median Salary` <- as.character(dat$`Starting Median Salary`)
dat$`Starting Median Salary` <- sub('\\$','', dat$`Starting Median Salary`)
dat$`Starting Median Salary` <- sub(',','',dat$`Starting Median Salary`)
dat$`Starting Median Salary` <- as.numeric(dat$`Starting Median Salary`)
dat$lon <- c(rep(0, 320))
dat$lat <- c(rep(0, 320))
Points <- as.character(dat$`School Name`)
for (i in 1:10 {
dat$lon <- c(rep(0, 320))
dat$lat <- c(rep(0, 320))
Points <- as.character(dat$`School Name`)
for (i in 1:10) {
latlon = geocode(Points[i])
dat$lon[i] = as.numeric(latlon[1])
dat$lat[i] = as.numeric(latlon[2])
}
dat <- dat[lon> (-130) & lon<(60) & lat>0 & lat<60,]
dat$lon <- c(rep(0, 320))
dat$lat <- c(rep(0, 320))
Points <- as.character(dat$`School Name`)
for (i in 1:10) {
latlon = geocode(Points[i])
dat$lon[i] = as.numeric(latlon[1])
dat$lat[i] = as.numeric(latlon[2])
}
#dat <- dat[lon> (-130) & lon<(60) & lat>0 & lat<60,]
